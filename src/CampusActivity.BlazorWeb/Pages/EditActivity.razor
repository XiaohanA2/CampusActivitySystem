@page "/manage-activities/edit/{id:int}"
@using CampusActivity.BlazorWeb.Services
@using CampusActivity.Shared.DTOs
@using CampusActivity.BlazorWeb.Shared
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Teacher,Admin")]
@inject IAdminService AdminService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>编辑活动</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-warning text-white">
                    <h4 class="mb-0"><i class="oi oi-pencil me-2"></i>编辑活动</h4>
                </div>
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">加载中...</span>
                            </div>
                            <p class="mt-2">正在加载活动信息...</p>
                        </div>
                    }
                    else if (activity == null)
                    {
                        <div class="alert alert-danger">
                            <i class="oi oi-warning me-2"></i>
                            找不到指定的活动，或者您没有权限编辑此活动。
                        </div>
                        <a href="/manage-activities" class="btn btn-secondary">
                            <i class="oi oi-arrow-left me-2"></i>返回活动列表
                        </a>
                    }
                    else if (categories == null)
                    {
                        <div class="text-center py-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">加载中...</span>
                            </div>
                            <p class="mt-2">正在加载分类...</p>
                        </div>
                    }
                    else
                    {
                        <EditForm Model="activity" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">活动标题 <span class="text-danger">*</span></label>
                                <InputText class="form-control" @bind-Value="activity.Title" placeholder="请输入活动标题..." required />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">活动描述 <span class="text-danger">*</span></label>
                                <InputTextArea class="form-control" @bind-Value="activity.Description" rows="4" placeholder="请输入活动详细描述..." required />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">活动分类 <span class="text-danger">*</span></label>
                                <InputSelect class="form-select" @bind-Value="activity.CategoryId" required>
                                    <option value="0">请选择分类</option>
                                    @foreach (var category in categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">活动图片</label>
                                <ImageUpload ImageUrl="@activity.ImageUrl" ImageUrlChanged="@UpdateImageUrl" Category="@selectedCategoryName" />
                                <small class="text-muted">可上传本地图片或生成随机图片作为活动封面</small>
                            </div>
                            
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">开始时间 <span class="text-danger">*</span></label>
                                    <input type="datetime-local" class="form-control" 
                                           value="@startTimeString" 
                                           @onchange="@((ChangeEventArgs e) => startTimeString = e.Value?.ToString() ?? "")" 
                                           required />
                                    <small class="text-muted">精确到时分</small>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">结束时间 <span class="text-danger">*</span></label>
                                    <input type="datetime-local" class="form-control" 
                                           value="@endTimeString" 
                                           @onchange="@((ChangeEventArgs e) => endTimeString = e.Value?.ToString() ?? "")" 
                                           required />
                                    <small class="text-muted">精确到时分</small>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">报名截止时间 <span class="text-danger">*</span></label>
                                <input type="datetime-local" class="form-control" 
                                       value="@registrationDeadlineString" 
                                       @onchange="@((ChangeEventArgs e) => registrationDeadlineString = e.Value?.ToString() ?? "")" 
                                       required />
                                <small class="text-muted">学生必须在此时间前完成报名（精确到时分）</small>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">活动地点 <span class="text-danger">*</span></label>
                                <InputText class="form-control" @bind-Value="activity.Location" placeholder="请输入活动地点..." required />
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label fw-bold">最大报名人数 <span class="text-danger">*</span></label>
                                <InputNumber class="form-control" @bind-Value="activity.MaxParticipants" min="1" required />
                            </div>
                            
                            <div class="mb-3">
                                <div class="form-check">
                                    <InputCheckbox class="form-check-input" @bind-Value="activity.IsPublished" id="isPublished" />
                                    <label class="form-check-label" for="isPublished">
                                        发布活动（取消勾选将保存为草稿）
                                    </label>
                                </div>
                            </div>
                            
                            <div class="d-flex gap-2">
                                <button class="btn btn-warning" type="submit" disabled="@isSaving">
                                    @if (isSaving)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        <span>保存中...</span>
                                    }
                                    else
                                    {
                                        <i class="oi oi-check me-2"></i>
                                        <span>保存修改</span>
                                    }
                                </button>
                                <button class="btn btn-secondary" type="button" @onclick="GoBack" disabled="@isSaving">
                                    <i class="oi oi-arrow-left me-2"></i>取消
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    
    private AdminActivityDto? activity;
    private bool isSaving = false;
    private bool isLoading = true;
    private IEnumerable<ActivityCategoryDto>? categories;
    private string selectedCategoryName => categories?.FirstOrDefault(c => c.Id == activity?.CategoryId)?.Name ?? "";

    // 用于datetime-local输入的字符串属性
    private string startTimeString
    {
        get => activity?.StartTime.ToString("yyyy-MM-ddTHH:mm") ?? "";
        set
        {
            if (activity != null && DateTime.TryParse(value, out var date))
            {
                activity.StartTime = date;
            }
        }
    }

    private string endTimeString
    {
        get => activity?.EndTime.ToString("yyyy-MM-ddTHH:mm") ?? "";
        set
        {
            if (activity != null && DateTime.TryParse(value, out var date))
            {
                activity.EndTime = date;
            }
        }
    }

    private string registrationDeadlineString
    {
        get => activity?.RegistrationDeadline.ToString("yyyy-MM-ddTHH:mm") ?? "";
        set
        {
            if (activity != null && DateTime.TryParse(value, out var date))
            {
                activity.RegistrationDeadline = date;
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // 并行加载分类和活动信息
            var categoriesTask = AdminService.GetCategoriesAsync();
            var activityTask = AdminService.GetActivityByIdAsync(Id);
            
            await Task.WhenAll(categoriesTask, activityTask);
            
            categories = await categoriesTask;
            activity = await activityTask;
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"加载数据失败: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (activity == null) return;
        
        if (activity.CategoryId == 0)
        {
            await JSRuntime.InvokeVoidAsync("alert", "请选择活动分类");
            return;
        }

        // 验证时间逻辑（编辑时相对宽松，允许修改已过期的活动）
        if (activity.EndTime <= activity.StartTime)
        {
            await JSRuntime.InvokeVoidAsync("alert", "活动结束时间必须晚于开始时间");
            return;
        }

        if (activity.RegistrationDeadline >= activity.StartTime)
        {
            await JSRuntime.InvokeVoidAsync("alert", "报名截止时间必须早于活动开始时间");
            return;
        }

        // 确保报名截止时间至少比活动开始时间早30分钟
        if ((activity.StartTime - activity.RegistrationDeadline).TotalMinutes < 30)
        {
            await JSRuntime.InvokeVoidAsync("alert", "报名截止时间应该至少比活动开始时间早30分钟，以便管理员有时间处理报名");
            return;
        }

        isSaving = true;
        try
        {
            Console.WriteLine($"准备提交活动数据: {System.Text.Json.JsonSerializer.Serialize(activity)}");
            var success = await AdminService.UpdateActivityAsync(activity);
            Console.WriteLine($"API调用结果: {success}");
            
            if (success)
            {
                await JSRuntime.InvokeVoidAsync("alert", "活动更新成功！");
                Navigation.NavigateTo("/manage-activities");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "活动更新失败，请检查输入信息");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"更新活动异常: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", $"更新活动时发生错误: {ex.Message}");
        }
        finally
        {
            isSaving = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/manage-activities");
    }

    private void UpdateImageUrl(string? value)
    {
        if (activity != null)
        {
            activity.ImageUrl = value;
        }
    }
} 